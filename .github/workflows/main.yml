name: CI devops 2025
on:
  push:
    branches: [main, develop]  # Triggers on both main and develop
  pull_request:

jobs:
  test-backend: 
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
      
      - name: Build and test with Maven
        run: mvn clean verify
        working-directory: ./simple-api
        
      - name: Build and test with Maven Sonar
        run: mvn -B verify sonar:sonar -Dsonar.projectKey=efrei-tp_tp-devops -Dsonar.organization=efrei-tp -Dsonar.host.url=https://sonarcloud.io -Dsonar.login=${{ secrets.SONAR_TOKEN }}  --file ./simple-api/pom.xml

  # Build and push Docker images - only runs on main branch
  build-and-push-docker-image:
    needs: test-backend  # Wait for tests to pass
    runs-on: ubuntu-24.04
    # Only run this job if we're on the main branch
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Login to DockerHub
        run: echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login --username ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin
      
      - name: Build image and push backend
        uses: docker/build-push-action@v6
        with:
          context: ./simple-api
          tags: ${{secrets.DOCKERHUB_USERNAME}}/tp-devops-simple-api:latest
          push: true
          
      - name: Build image and push database
        uses: docker/build-push-action@v6
        with:
          context: ./database
          push: true
          tags: ${{secrets.DOCKERHUB_USERNAME}}/tp-devops-database:latest
          
      - name: Build image and push httpd
        uses: docker/build-push-action@v6
        with:
          context: ./http-server
          push: true
          tags: ${{secrets.DOCKERHUB_USERNAME}}/tp-devops-httpd:latest

   # Deploy with Ansible - only runs after successful Docker build
  ansible-deploy:
    needs: [test-backend, build-and-push-docker-image] # Wait for tests and Docker build
    runs-on: ubuntu-24.04
    # Only run this job if we're on the main branch
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Install Ansible
        run: |
          sudo apt-get update
          sudo apt-get install -y ansible
          
      - name: Setup SSH key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.DEPLOY_HOST }} >> ~/.ssh/known_hosts
          
      - name: Test SSH connection
        run: |
          ssh -o ConnectTimeout=10 ${{ secrets.DEPLOY_USER }}@${{ secrets.DEPLOY_HOST }} "echo 'SSH connection successful'"
          
      - name: Create Ansible inventory
        run: |
          mkdir -p ansible/inventories
          cat > ansible/inventories/production.yml << EOF
          all:
            hosts:
              production:
                ansible_host: ${{ secrets.DEPLOY_HOST }}
                ansible_user: ${{ secrets.DEPLOY_USER }}
                ansible_ssh_private_key_file: ~/.ssh/id_rsa
          EOF
          
      - name: Run Ansible deployment
        run: |
          cd ansible
          ansible-playbook -i inventories/production.yml playbook.yml \
            --extra-vars "database_user=${{ secrets.DATABASE_USER }}" \
            --extra-vars "database_password=${{ secrets.DATABASE_PASSWORD }}" \
            --extra-vars "dockerhub_username=${{ secrets.DOCKERHUB_USERNAME }}" \
            -v
            
      - name: Verify deployment
        run: |
          sleep 30  # Wait for containers to start
          curl -f http://${{ secrets.DEPLOY_HOST }}/actuator/health || echo "Health check failed"